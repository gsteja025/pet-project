// Code generated by MockGen. DO NOT EDIT.
// Source: database/database.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "example.com/petproject/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDbinterface is a mock of Dbinterface interface.
type MockDbinterface struct {
	ctrl     *gomock.Controller
	recorder *MockDbinterfaceMockRecorder
}

// MockDbinterfaceMockRecorder is the mock recorder for MockDbinterface.
type MockDbinterfaceMockRecorder struct {
	mock *MockDbinterface
}

// NewMockDbinterface creates a new mock instance.
func NewMockDbinterface(ctrl *gomock.Controller) *MockDbinterface {
	mock := &MockDbinterface{ctrl: ctrl}
	mock.recorder = &MockDbinterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDbinterface) EXPECT() *MockDbinterfaceMockRecorder {
	return m.recorder
}

// CreateCommentDbInteraction mocks base method.
func (m *MockDbinterface) CreateCommentDbInteraction(arg0 models.Comment) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateCommentDbInteraction", arg0)
}

// CreateCommentDbInteraction indicates an expected call of CreateCommentDbInteraction.
func (mr *MockDbinterfaceMockRecorder) CreateCommentDbInteraction(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCommentDbInteraction", reflect.TypeOf((*MockDbinterface)(nil).CreateCommentDbInteraction), arg0)
}
